---
# tasks file for reaper
- name: Ensure repo for reaper is present
  yum_repository:
    name: bintray-thelastpickle-reaper-rpm
    description: bintray-thelastpickle-reaper-rpm
    baseurl: https://dl.bintray.com/thelastpickle/reaper-rpm
    enabled: yes
    gpgcheck: no
  register: yum_repo

- name: Ensure epel is available
  yum:
    name: epel-release
    state: present
  register: epel

- name: Clear yum cache
  shell: yum clean all
  when: yum_repo.changed == True or epel.changed == True

- name: Add Cassandra Repository
  yum_repository:
    name: Cassandra
    description: Cassandra
    baseurl: "{{ cassandra_yum_repo_url }}"
    gpgcheck: 1
    gpgkey: "{{ cassandra_yum_repo_gpgkey_url }}"
    state: present

- name: Install additional packages
  yum:
    name: "{{ additional_packages }}"
    state: present

- name: Install Cassandra & Tools
  yum:
    name: "{{ cassandra_packages }}"
    state: present

- name: Set  authenticator in cassandra.yaml
  lineinfile:
    path: "/etc/cassandra/conf/cassandra.yaml"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { "regexp": "^authenticator:*", "line": "authenticator: PasswordAuthenticator" }
    - { "regexp": "^authorizer:*", "line": "authorizer: CassandraAuthorizer" }
    - { "regexp": "^cluster_name:*", "line": "cluster_name: Reaper" }
    - { "regexp": "^listen_address:*", "line": "listen_address: {{ ansible_eth1.ipv4.address }}" }
    - { "regexp": "^rpc_address:*", "line": "rpc_address: {{ ansible_eth1.ipv4.address }}" }
    - { "regexp": "^          - seeds: *", "line": "          - seeds: '192.168.43.201,192.168.43.202'" }
  register: config_change

- name: Restart cassandra service
  service:
    name: "cassandra"
    state: "restarted"
    enabled: "yes"
  when: config_change.changed == True

- name: Ensure C* is active
  wait_for:
    port: 9042
    host: "{{ ansible_eth1.ipv4.address }}"

- stat:
    path: /home/vagrant/cass_user.success
    get_checksum: no
  register: cass_user

- name: Create cql file to create C* admin user
  template:
    src: create_admin_user.cql.j2
    dest: /home/vagrant/create_admin_user.cql
  when: cass_user.stat.exists == False

- name: Run admin user script
  shell: cqlsh -u cassandra -p cassandra -f /home/vagrant/create_admin_user.cql && rm /home/vagrant/create_admin_user.cql && touch /home/vagrant/cass_user.success
  args:
    creates: /home/vagrant/cass_user.success
  environment:
    CQLSH_HOST: "{{ ansible_eth1.ipv4.address }}"

- name: Secure default cassandra user
  template:
    src: secure_default_cassandra_user.cql.j2
    dest: /home/vagrant/secure_default_cassandra_user.cql
  when: cass_user.stat.exists == False

- name: Run admin user script
  shell: cqlsh -u {{ cassandra_admin_user }} -p {{ cassandra_admin_user_pwd }} -f /home/vagrant/secure_default_cassandra_user.cql && rm /home/vagrant/secure_default_cassandra_user.cql && touch /home/vagrant/cass_user_secured.success
  args:
    creates: /home/vagrant/cass_user_secured.success
  environment:
    CQLSH_HOST: "{{ ansible_eth1.ipv4.address }}"
  run_once: yes

- name: Test that default cassandra user has been secured
  shell: cqlsh -u cassandra -p cassandra --execute "DESC KEYSPACES"
  register: cqlsh_output
  environment:
    CQLSH_HOST: "{{ ansible_eth1.ipv4.address }}"
  ignore_errors: yes
  run_once: yes

- assert:
    that:
      - "'Failed to authenticate' in cqlsh_output.stderr"

- stat:
    path: /home/vagrant/cass_reaper.success
    get_checksum: no
  register: cass_reaper

- name: Template reaper user script to host
  template:
    src: create_reaper_user.cql.j2
    dest: /home/vagrant/create_reaper_user.cql
  when: cass_reaper.stat.exists == False

- name: Ensure reaper keyspace exists
  cassandra_keyspace:
    login_user: "{{ cassandra_admin_user }}"
    login_password: "{{ cassandra_admin_user_pwd }}"
    login_host: "{{ ansible_eth1.ipv4.address }}"
    name: reaper_db
    state: present
    data_centres:
      datacenter1: 2
  run_once: yes

- name: Run reaper user script
  shell: cqlsh -u {{ cassandra_admin_user }} -p {{ cassandra_admin_user_pwd }} -f /home/vagrant/create_reaper_user.cql && rm /home/vagrant/create_reaper_user.cql && touch /home/vagrant/cass_reaper.success
  args:
    creates: /home/vagrant/cass_reaper.success
  environment:
    CQLSH_HOST: "{{ ansible_eth1.ipv4.address }}"
  run_once: yes

- name: Ensure Reaper repo is available
  yum_repository:
    name: bintray-thelastpickle-reaper-rpm
    description: bintray-thelastpickle-reaper-rpm
    baseurl: https://dl.bintray.com/thelastpickle/reaper-rpm
    gpgcheck: no
    repo_gpgcheck: no
    enabled: yes

- name: Ensure reaper is installed
  yum:
    name: reaper
    state: installed

- name:
  lineinfile:
    path: /etc/cassandra-reaper/cassandra-reaper.yaml
    line: "storageType: memory"
    state: absent

- name:
  blockinfile:
    path: /etc/cassandra-reaper/cassandra-reaper.yaml
    block: |
      storageType: cassandra
      cassandra:
        clusterName: "Reaper"
        contactPoints: ["{{ ansible_eth1.ipv4.address }}"]
        keyspace: reaper_db
        queryOptions:
          consistencyLevel: LOCAL_ONE
          serialConsistencyLevel: SERIAL
        authProvider:
          type: plainText
          username: {{ cassandra_reaper_user }}
          password: {{ cassandra_reaper_user_pwd }}

- name: Ensure cassandra-reaper is configured and running
  service:
    name: cassandra-reaper
    state: started
    enabled: yes
